// Generated by CoffeeScript 1.12.4
(function() {
  var Acuity, config, date, dates, moment, nextWeek;

  Acuity = require('acuityscheduling');

  config = {
    userId: 13277271,
    apiKey: '268ba575326cc2fe94d6b780009bee25'
  };

  moment = require('moment');

  dates = dates != null ? dates : this;

  date = new Date();

  nextWeek = moment(date).add(7, 'days').format("YYYY-MM-DD");

  module.exports = {
    getAvailDays: function(auth, options) {
      var acuity, apptTypeID, calId, month, tz;
      console.log({
        'OPTIONS': options
      });
      acuity = Acuity.basic(auth);
      month = options.date;
      apptTypeID = options.apptTypeId;
      tz = options.tz;
      calId = options.calId;
      return new Promise(function(resolve, reject) {
        return acuity.request("availability/dates?appointmentTypeID=" + apptTypeID + "&month=" + month + "&calendarID=" + calId + "&timezone=" + tz, function(err, response, datesAvail) {
          var d, i, len, responseJSON, success;
          dates = [];
          console.log(datesAvail);
          for (i = 0, len = datesAvail.length; i < len; i++) {
            d = datesAvail[i];
            dates.push({
              date: d.date,
              dateFriendly: moment(d.date).calendar(null, {
                sameDay: '[Today]',
                nextDay: '[Tomorrow]',
                nextWeek: 'MMMM Do',
                sameElse: 'MMMM Do'
              })
            });
          }
          if (dates.length > 4) {
            dates.length = 5;
          }
          console.log({
            'DATES': dates
          });
          responseJSON = {
            response: "Here's what we have available over the next week...",
            "continue": true,
            customPayload: options.apptTypeId,
            quickReplies: (function() {
              var j, len1, results;
              results = [];
              for (j = 0, len1 = dates.length; j < len1; j++) {
                d = dates[j];
                results.push(d.dateFriendly);
              }
              return results;
            })(),
            customVars: {
              "apptTypeID": apptTypeID.toString()
            }
          };
          JSON.stringify(responseJSON);
          console.log(responseJSON);
          success = true;
          if (success) {
            return resolve(responseJSON);
          } else {
            return reject(Error(err));
          }
        });
      });
    }
  };

}).call(this);

//# sourceMappingURL=availDaysService.js.map
