// Generated by CoffeeScript 1.12.4
(function() {
  var Acuity, config, dates, moment;

  Acuity = require('acuityscheduling');

  config = {
    userId: 13277271,
    apiKey: '268ba575326cc2fe94d6b780009bee25'
  };

  Array.prototype.where = function(query) {
    var hit;
    if (typeof query !== "object") {
      return [];
    }
    hit = Object.keys(query).length;
    return this.filter(function(item) {
      var key, match, value;
      match = 0;
      for (key in query) {
        value = query[key];
        if (item[key] === value) {
          match += 1;
        }
      }
      if (match === hit) {
        return true;
      } else {
        return false;
      }
    });
  };

  moment = require('moment');

  dates = dates != null ? dates : this;

  module.exports = {
    getAvailTimes: function(auth, options) {
      var acuity;
      acuity = Acuity.basic(auth);
      return new Promise(function(resolve, reject) {
        return acuity.request("availability/times?date=" + options.date + "&calendarID=" + options.calendarID + "&appointmentTypeID=" + options.appointmentTypeID + "&timezone=" + options.tz, function(err, response, timesAvail) {
          var goodTimes, hour, i, len, success, time, times;
          times = [];
          for (i = 0, len = timesAvail.length; i < len; i++) {
            time = timesAvail[i];
            hour = moment(time.time).format("HH");
            if (hour < 12) {
              time.timeOfDay = 'morning';
            } else {
              time.timeOfDay = 'afternoon';
            }
            times.push({
              time: time.time,
              timeFriendly: moment(time.time).format('h:mma'),
              timeOfDay: time.timeOfDay
            });
          }
          goodTimes = {
            timePref: options.timePref,
            times: times,
            day: options.day
          };
          console.log(goodTimes);
          JSON.stringify(goodTimes);
          success = true;
          if (success) {
            return resolve(goodTimes);
          } else {
            return reject(Error, err);
          }
        });
      });
    }
  };


  /*bb = moment('2017-03-14T10:30:00-0400').format("HH")
  isM = ''
  if bb < 12 then isM = 'morning' else isM = 'afternoon'
  console.log isM
   */

}).call(this);

//# sourceMappingURL=availTimesService.js.map
